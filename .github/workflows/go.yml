name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Create Folder
        run: mkdir myapp

      - name: Install Dependencies for Cross-compilation (ARM64)
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev gcc-aarch64-linux-gnu libc6-dev-arm64-cross
          dpkg -L gcc-aarch64-linux-gnu
        
      - name: Build
        run: |
          export PATH=$PATH:/usr/bin/aarch64-linux-gnu-gcc
          CC_FOR_TARGET=aarch64-linux-gnu-gcc CC=aarch64-linux-gnu-gcc CGO_ENABLED=1 GOARCH=arm64 GOOS=linux go build -o myapp ./...

      - name: Test
        run: go test -v ./...

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp
          path: myapp

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp
      - name: Set up SSH key
        run: |
          env
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 22 ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          sudo apt-get install sshpass

      - name: ssh-scp-ssh-pipelines
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          port: 22 # optional, default is 22
          user: andreas
          key: ${{ secrets.SSH_KEY }} # optional
          first_ssh: |
            sudo systemctl stop goapi.service
          scp: |
            api => /home/${{ vars.SSH_USER }}/api_prod
          last_ssh: |
            swag init
            sudo systemctl start goapi.service
            sudo systemctl restart goapi.service